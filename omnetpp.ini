[General]
#scheduler-class = "inet::cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors = true
#tkenv-plugin-path = ../../../etc/plugins
#tkenv-default-run=1

sim-time-limit = 10day

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m
#**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.updateInterval = 0.2s # test with 0s too, and let getCurrentPosition update the display string from a test module


######### 0.RSPF  1.CNPF  2.CDPF  3.HPF  4.EPDS  5.EPDS_TSP ##########
[Config CNPF]                     #Efficient Parcel Delivery Service Bien Aime Configuration#
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 50   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 30  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 0        
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m

######## 0.RSPF  1.CNPF  2.CDPF  3.HPF  4.EPDS  5.EPDS_TSP ##########
[Config BNB]
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 50   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 30  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 1        
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m

[Config DP]
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 50   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 30  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 2        
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m

[Config PRIM]
network = ParcelDeliveryNetwork

description = "1 drones, 10 destinations, 100 parcels, "
*.numdrones = 1       # number of drones
**.drone*.mobility.typename = "DroneNetMob"
**.drone[*].mobility.ndst = 50   # number of destination
**.drone[*].mobility.nd = 8
**.drone[*].mobility.npar = 30  # number of parcels

**.drone[*].mobility.initFromDisplayString = false
**.drone[*].mobility.changeInterval = truncnormal(2s, 0.5s)
**.drone[*].mobility.angleDelta = normal(0deg, 30deg)
#**.drone[*].mobility.speed = truncnormal(15mps, 5mps)
**.drone[*].mobility.speed = 10mps
**.drone[*].mobility.remainingBattery = 480

# the Maximum delivery capacity of drone.   but for the realistic and various simulation, we can assume that drone have various capacity of delivery parcel weight.
#**.drone[*].mobility.weightCapacity = 25  
#Invalid value: But to run with 1 drone and navigate to all destinations. 0610 
**.drone[*].mobility.weightCapacity = 100
**.drone[*].mobility.parcelSelectionMethod = 3        
**.drone[*].mobility.initialX = 0m
**.drone[*].mobility.initialY = 0m
**.drone[*].mobility.initialZ = 0m


# added by harrison on July, 9
*.numdst = 6
**.dst*.mobility.typename = "StatNodeMob"
**.dst[0].mobility.initialX = 200m
**.dst[0].mobility.initialY =  100m
**.dst[0].mobility.initialZ = 0m
**.dst[1].mobility.initialX = 100m
**.dst[1].mobility.initialY = 250m
**.dst[1].mobility.initialZ = 0m
**.dst[2].mobility.initialX = 260m
**.dst[2].mobility.initialY = 220m
**.dst[2].mobility.initialZ = 0m
**.dst[3].mobility.initialX = 200m
**.dst[3].mobility.initialY = 330m
**.dst[3].mobility.initialZ = 0m
**.dst[4].mobility.initialX = 400m
**.dst[4].mobility.initialY = 300m
**.dst[4].mobility.initialZ = 0m
**.dst[5].mobility.initialX = 400m
**.dst[5].mobility.initialY = 200m
**.dst[5].mobility.initialZ = 0m
**.dst[*].mobility.initFromDisplayString = false


